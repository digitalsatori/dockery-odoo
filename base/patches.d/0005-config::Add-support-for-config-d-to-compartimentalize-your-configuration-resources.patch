Allows a more fine grained control over your configuration management.
Now you can subdvide your configuration into files and just make
the folder available to your odoo instance.

No need for clumsy concatenation scripts.

 odoo/tools/config.py | 6 +++++-
 1 file changed, 5 insertions(+), 1 deletion(-)

diff --git a/odoo/tools/config.py b/odoo/tools/config.py
index 89410f01f27..d3906900c3d 100644
--- a/odoo/tools/config.py
+++ b/odoo/tools/config.py
@@ -371,6 +371,10 @@ class configmanager(object):
 
         self.rcfile = os.path.abspath(
             self.config_file or opt.config or os.environ.get('ODOO_RC') or os.environ.get('OPENERP_SERVER') or rcfilepath)
+        if os.path.isdir(self.rcfile):
+            self.rcfiles = sorted([os.path.join(self.rcfile, f) for f in os.listdir(self.rcfile) if os.path.isfile(os.path.join(self.rcfile, f))])
+        else:
+            self.rcfiles = [self.rcfile]
         self.load()
 
         # Verify that we want to log or not, if not the output will go to stdout
@@ -506,7 +510,7 @@ class configmanager(object):
     def load(self):
         p = ConfigParser.ConfigParser()
         try:
-            p.read([self.rcfile])
+            p.read(self.rcfiles)
             for (name,value) in p.items('options'):
                 if value=='True' or value=='true':
                     value = True
