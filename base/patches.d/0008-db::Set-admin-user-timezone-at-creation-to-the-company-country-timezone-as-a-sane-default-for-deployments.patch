This patch just avoids timezone configuration, which you might forget and which
is probably the same as the company's country configuration.

 odoo/service/db.py | 5 +++++
 1 file changed, 5 insertions(+)

diff --git a/odoo/service/db.py b/odoo/service/db.py
index cb8e4e6ef3d..a3ede358810 100644
--- a/odoo/service/db.py
+++ b/odoo/service/db.py
@@ -3,20 +3,21 @@
 import json
 import logging
 import os
 import shutil
 import tempfile
 import threading
 import traceback
 import xml.etree.ElementTree as ET
 import zipfile
 
+from pytz import country_timezones
 from functools import wraps
 from contextlib import closing
 
 import psycopg2
 
 import odoo
 from odoo import SUPERUSER_ID
 from odoo.exceptions import UserError
 import odoo.release
 import odoo.sql_db
@@ -39,37 +40,41 @@ def check_super(passwd):
 # This should be moved to odoo.modules.db, along side initialize().
 def _initialize_db(id, db_name, demo, lang, user_password, login='admin', country_code=None):
     try:
         db = odoo.sql_db.db_connect(db_name)
         with closing(db.cursor()) as cr:
             # TODO this should be removed as it is done by Registry.new().
             odoo.modules.db.initialize(cr)
             odoo.tools.config['load_language'] = lang
             cr.commit()
 
         registry = odoo.modules.registry.Registry.new(db_name, demo, None, update_module=True)
 
         with closing(db.cursor()) as cr:
             env = odoo.api.Environment(cr, SUPERUSER_ID, {})
 
             if lang:
                 modules = env['ir.module.module'].search([('state', '=', 'installed')])
                 modules.update_translations(lang)
 
             if country_code:
                 countries = env['res.country'].search([('code', 'ilike', country_code)])
                 if countries:
                     env['res.company'].browse(1).country_id = countries[0]
+                if len(country_timezones[country_code]) == 1:
+                    users = env['res.users'].search(['|', ('active','=', True), ('active','=', False)])
+                    users.write({'tz': country_timezones[country_code][0]})
+
 
             # update admin's password and lang and login
             values = {'password': user_password, 'lang': lang}
             if login:
                 values['login'] = login
                 emails = odoo.tools.email_split(login)
                 if emails:
                     values['email'] = emails[0]
             env.user.write(values)
 
             cr.execute('SELECT login, password FROM res_users ORDER BY login')
             cr.commit()
     except Exception, e:
         _logger.exception('CREATE DATABASE failed:')
